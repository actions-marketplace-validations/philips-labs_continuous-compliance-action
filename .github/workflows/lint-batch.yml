name: Repolinter-batch

on:
  workflow_dispatch:
    inputs:
      repositories_input:
        description: 'Target Repositories (my-org/repository,my-org/repository-2)'     
        required: true

jobs:
  lint:
    runs-on: ubuntu-latest
    container: ghcr.io/philips-labs/continuous-compliance:latest
    env:
      TARGET_REPOS: ${{ github.event.inputs.repositories_input }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout CC for the loop script 
        uses: actions/checkout@v2

      - name: Set variables
        run: |
          current_time=$(date +%s)
          echo "::set-output name=CURRENT_TIME::$current_time"
        id: set_variables

      - name: Run repolinter on target repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for i in $(echo $TARGET_REPOS | sed "s/,/ /g")
          do
              export TARGET_REPO=$i
              echo " checking: $i"
              /app/repolinter/bin/repolinter.js lint \
                  --rulesetFile ${GITHUB_WORKSPACE}/config/repolint.json \
                  -g https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${i}
          done

      - name: Git pull latest version of the checked-repos file to avoid conflicts
        run: |
          git pull

      - name: Update checked repo list
        run: |
          for i in $(echo $TARGET_REPOS | sed "s/,/ /g")
          do
              echo " update database: $i"
              repo=${i}
              escaped=${repo/\//\\/}
              sed "/^$escaped/d" -i data/checked-repos.txt
              echo ${i} ${{ steps.set_variables.outputs.CURRENT_TIME }} >> data/checked-repos.txt
          done

      - name: Git commit & push the updated checked-repos.txt
        continue-on-error: true
        run: |
          git config --global user.name 'Continuous Compliance'
          git config --global user.email 'cc@philips-labs.com'
          git add data/checked-repos.txt
          git commit -m "Automatically added: ${{ steps.set_variables.outputs.REPO }} ${{ steps.set_variables.outputs.CURRENT_TIME }}"
          git pull
          git push
